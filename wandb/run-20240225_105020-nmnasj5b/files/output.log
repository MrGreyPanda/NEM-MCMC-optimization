end_nodes: [6, 12, 6, 0, 4, 8, 7, 6, 12, 4, 7, 5, 9, 3, 8, 2, 4, 2, 12, 1, 9, 12, 4, 8, 11, 12, 9, 2, 4, 1, 11, 1, 10, 5, 7, 8, 1, 5, 6, 5, 9, 10, 3, 8, 7, 7, 8, 4, 0, 12, 8, 0, 1, 11, 6, 11, 12, 10, 10, 0, 9, 7, 5, 3, 11, 5, 11, 1, 3, 9, 3, 3, 12, 2, 12, 8, 7, 1, 1, 5, 8, 7, 1, 4, 8, 4, 11, 1, 8, 5, 8, 3, 12, 9, 8, 9, 4, 7, 1, 9, 12, 6, 5, 9, 3, 4, 2, 3, 2, 0, 9, 10, 4, 7, 1, 1, 10, 12, 2, 2, 0, 1, 11, 8, 10, 6, 11, 8, 4, 8]
permutation_order: [ 0  4  1  6  2  3  5  7  8  9 10 12 11]
Best ll: -451.0848364815272
Rounded LL: -544.822650274034
Comparison: real_ll: -210.87927203504879 - inferred_ll: -544.822650274034
Hamming Distance: 22
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [2, 9, 12, 12, 1, 4, 1, 7, 12, 7, 7, 10, 6, 12, 3, 1, 7, 0, 6, 6, 9, 12, 12, 0, 11, 7, 4, 11, 12, 3, 9, 1, 5, 0, 0, 0, 10, 8, 0, 6, 10, 3, 6, 11, 0, 8, 3, 12, 7, 7, 8, 3, 5, 3, 10, 3, 12, 7, 4, 0, 6, 8, 10, 1, 2, 10, 11, 4, 1, 11, 5, 11, 11, 8, 6, 8, 10, 3, 4, 4, 9, 7, 8, 6, 9, 0, 7, 3, 11, 12, 6, 6, 10, 2, 5, 8, 11, 12, 10, 11, 5, 1, 7, 10, 8, 1, 12, 2, 8, 6, 5, 7, 11, 0, 7, 0, 4, 11, 9, 9, 9, 6, 10, 2, 2, 8, 3, 0, 12, 3]
permutation_order: [ 0  4  1  6  2  7  5  3  9  8 10 11 12]
Best ll: -429.45891814137167
Rounded LL: -539.0608173797465
Comparison: real_ll: -197.88371061795806 - inferred_ll: -539.0608173797465
Hamming Distance: 31
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 1 0 0 1 1 1 1 1]
 [0 0 0 1 0 1 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 1 0 1 1 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [0, 1, 1, 5, 2, 11, 12, 10, 4, 4, 9, 3, 9, 0, 9, 10, 2, 6, 10, 6, 12, 11, 8, 5, 8, 7, 8, 4, 0, 0, 5, 7, 5, 6, 6, 8, 2, 8, 2, 3, 3, 0, 2, 5, 2, 2, 8, 8, 5, 8, 10, 8, 2, 7, 12, 6, 11, 8, 12, 5, 12, 9, 5, 5, 7, 2, 12, 6, 11, 11, 7, 10, 8, 3, 7, 4, 7, 8, 8, 12, 5, 10, 7, 7, 5, 9, 11, 8, 11, 7, 7, 10, 3, 5, 11, 2, 9, 4, 12, 7, 4, 4, 12, 11, 8, 8, 8, 8, 10, 9, 9, 6, 4, 11, 3, 7, 8, 5, 10, 9, 1, 12, 5, 11, 0, 3, 11, 1, 0, 9]
/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py:101: RuntimeWarning: overflow encountered in scalar power
  V_ik= -(D @ exp_weights @ D)[i][k] / (1 + D[i][k])**2 * exp_weights[i][k] * D[i][k]
permutation_order: [ 0  4  6  1  2  5  3  7  8  9 11 12 10]
Best ll: -434.1195385680888
Rounded LL: -560.6483126873144
Comparison: real_ll: -189.78876322731497 - inferred_ll: -560.6483126873144
Hamming Distance: 27
weights:
[[0 1 1 0 0 1 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 1 1 0 0 1 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 1 0 0 1 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [3, 9, 8, 2, 5, 9, 7, 10, 9, 1, 9, 0, 7, 4, 8, 3, 3, 11, 7, 8, 8, 7, 6, 10, 2, 3, 10, 2, 8, 6, 11, 0, 10, 12, 1, 2, 12, 9, 0, 4, 12, 0, 4, 7, 9, 11, 6, 11, 12, 6, 6, 11, 12, 9, 7, 2, 5, 1, 0, 2, 7, 3, 4, 10, 6, 12, 10, 4, 6, 8, 6, 9, 5, 8, 9, 6, 9, 3, 5, 10, 0, 4, 9, 10, 11, 2, 11, 5, 8, 9, 9, 1, 11, 10, 3, 10, 9, 4, 4, 1, 1, 7, 10, 7, 1, 5, 12, 1, 6, 2, 0, 4, 6, 12, 6, 1, 0, 9, 9, 12, 0, 6, 11, 9, 5, 8, 4, 8, 3, 0]
permutation_order: [ 0  4  1  6  2  5  7  3  9  8 10 11 12]
Best ll: -453.5768650239353
Rounded LL: -597.493901727462
Comparison: real_ll: -205.11094940326072 - inferred_ll: -597.493901727462
Hamming Distance: 29
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 1 0 1 1 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [10, 1, 0, 11, 4, 3, 3, 2, 11, 1, 10, 11, 8, 1, 9, 6, 0, 0, 1, 3, 3, 8, 9, 0, 8, 3, 11, 10, 11, 8, 6, 3, 7, 9, 4, 12, 0, 12, 12, 2, 11, 6, 5, 4, 2, 3, 12, 5, 1, 1, 6, 1, 5, 5, 9, 4, 12, 0, 11, 7, 8, 1, 6, 1, 8, 4, 10, 9, 5, 9, 3, 11, 1, 0, 10, 3, 12, 4, 1, 3, 1, 6, 4, 7, 10, 5, 2, 5, 5, 3, 10, 4, 11, 10, 10, 1, 9, 10, 2, 8, 11, 3, 2, 7, 6, 4, 10, 11, 8, 3, 10, 5, 12, 12, 0, 3, 0, 12, 5, 6, 4, 1, 3, 9, 11, 5, 3, 10, 7, 6]
permutation_order: [ 0  4  1  6  2  5  3  7  8 10  9 11 12]
Best ll: -440.009259283513
Rounded LL: -542.9235689831696
Comparison: real_ll: -191.84313531955704 - inferred_ll: -542.9235689831696
Hamming Distance: 27
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 1 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [6, 6, 3, 9, 2, 3, 3, 2, 12, 1, 4, 11, 6, 8, 10, 11, 8, 1, 9, 7, 3, 6, 11, 9, 9, 3, 12, 12, 5, 6, 10, 3, 2, 7, 10, 2, 9, 5, 1, 11, 8, 10, 12, 1, 7, 5, 6, 0, 4, 8, 0, 6, 3, 5, 8, 1, 7, 8, 3, 9, 7, 0, 5, 2, 3, 11, 2, 11, 12, 7, 9, 2, 8, 10, 2, 0, 1, 0, 2, 7, 10, 6, 1, 6, 10, 1, 2, 4, 9, 0, 6, 5, 2, 8, 6, 3, 12, 0, 10, 3, 7, 4, 8, 6, 12, 2, 5, 11, 7, 0, 2, 11, 11, 9, 12, 11, 2, 9, 6, 1, 1, 1, 2, 4, 2, 2, 6, 2, 3, 8]
permutation_order: [ 0  4  1  6  2  3  5  7  8  9 11 10 12]
Best ll: -416.5967413724662
Rounded LL: -501.6276142129861
Comparison: real_ll: -193.47878469159545 - inferred_ll: -501.6276142129861
Hamming Distance: 22
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [2, 7, 7, 12, 2, 11, 6, 11, 5, 6, 8, 12, 1, 8, 1, 1, 11, 7, 4, 0, 10, 10, 3, 5, 3, 4, 12, 3, 2, 2, 3, 5, 5, 10, 6, 3, 6, 7, 8, 4, 12, 6, 2, 10, 10, 1, 2, 0, 9, 6, 2, 12, 9, 2, 3, 2, 0, 10, 3, 7, 12, 10, 6, 2, 9, 8, 12, 0, 9, 3, 11, 9, 12, 8, 11, 4, 11, 9, 5, 8, 10, 5, 8, 5, 7, 6, 12, 0, 1, 4, 10, 6, 4, 3, 11, 11, 6, 12, 8, 12, 7, 9, 4, 2, 0, 10, 9, 5, 2, 0, 12, 4, 11, 11, 1, 11, 0, 12, 9, 3, 4, 8, 9, 3, 10, 12, 11, 11, 9, 5]
permutation_order: [ 0  4  1  6  2  5  7  3  8  9 10 12 11]
Best ll: -469.34009238383237
Rounded LL: -615.9133859559904
Comparison: real_ll: -205.0063199657104 - inferred_ll: -615.9133859559904
Hamming Distance: 29
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 1 1 1]
 [0 0 0 1 0 1 1 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [6, 2, 6, 0, 2, 0, 4, 1, 12, 12, 8, 0, 3, 7, 4, 3, 12, 7, 2, 10, 9, 6, 3, 11, 10, 12, 7, 9, 12, 8, 12, 9, 8, 12, 5, 6, 9, 5, 3, 11, 12, 1, 8, 0, 9, 12, 5, 10, 8, 10, 1, 9, 2, 5, 1, 4, 4, 5, 12, 2, 10, 0, 11, 7, 3, 12, 1, 7, 2, 3, 9, 9, 0, 5, 5, 6, 1, 1, 11, 5, 10, 9, 11, 1, 4, 7, 12, 2, 6, 10, 10, 10, 2, 3, 2, 12, 2, 12, 9, 1, 6, 9, 3, 12, 0, 12, 7, 11, 10, 12, 8, 6, 2, 9, 4, 7, 8, 1, 12, 2, 0, 11, 12, 10, 3, 1, 0, 7, 6, 9]
permutation_order: [ 0  4  1  6  2  5  7  9  3  8 12 10 11]
Best ll: -396.30683585294094
Rounded LL: -594.2408542318838
Comparison: real_ll: -194.46111799114962 - inferred_ll: -594.2408542318838
Hamming Distance: 25
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 1 0 1 1 1 1]
 [0 0 0 1 0 0 0 1 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 1 1 1 0 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [0, 10, 12, 5, 4, 6, 1, 12, 10, 10, 10, 1, 0, 8, 5, 7, 10, 0, 12, 12, 9, 2, 8, 5, 6, 4, 1, 5, 4, 2, 10, 1, 4, 7, 2, 7, 10, 1, 3, 7, 0, 6, 9, 12, 1, 8, 0, 10, 0, 11, 8, 8, 3, 9, 2, 4, 2, 8, 0, 12, 4, 11, 1, 6, 11, 0, 0, 10, 3, 12, 8, 3, 6, 10, 7, 10, 3, 8, 6, 7, 12, 2, 0, 10, 8, 7, 7, 2, 11, 7, 7, 3, 0, 10, 3, 7, 5, 8, 8, 11, 12, 4, 9, 0, 2, 10, 7, 6, 7, 3, 0, 4, 3, 10, 5, 0, 4, 2, 9, 2, 0, 12, 10, 5, 1, 12, 8, 9, 6, 7]
permutation_order: [ 0  4  1  6  2  5  7  3  9  8 10 12 11]
Best ll: -462.5823299421621
Rounded LL: -604.2081830557028
Comparison: real_ll: -197.21229420781455 - inferred_ll: -604.2081830557028
Hamming Distance: 29
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 1 0 1 1 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [12, 10, 1, 9, 9, 8, 7, 7, 2, 12, 10, 5, 10, 12, 10, 1, 10, 3, 2, 4, 9, 0, 11, 12, 4, 6, 12, 3, 10, 6, 1, 4, 0, 3, 10, 8, 3, 2, 10, 5, 2, 1, 8, 9, 7, 11, 11, 5, 2, 10, 10, 7, 7, 0, 11, 0, 3, 1, 11, 10, 3, 6, 12, 4, 8, 5, 0, 12, 2, 7, 1, 6, 9, 8, 12, 2, 3, 3, 1, 12, 0, 3, 0, 8, 10, 4, 2, 3, 7, 9, 5, 7, 1, 12, 0, 6, 8, 1, 12, 6, 9, 1, 11, 0, 4, 6, 8, 4, 12, 7, 0, 9, 12, 7, 0, 0, 7, 12, 1, 10, 1, 4, 1, 1, 8, 7, 5, 2, 6, 12]
permutation_order: [ 0  4  1  6  2  5  7  3  9  8 10 12 11]
Best ll: -454.1717399784565
Rounded LL: -595.0925262957531
Comparison: real_ll: -195.5709014478944 - inferred_ll: -595.0925262957531
Hamming Distance: 29
weights:
[[0 1 0 1 0 1 1 1 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 1 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 1 0 1 1 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1 0 1 1 1]
 [0 0 0 0 0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0]]