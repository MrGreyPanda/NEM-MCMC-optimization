end_nodes: [6, 6, 0, 4, 8, 7, 6, 4, 7, 5, 3, 8, 2, 4, 2, 1, 4, 8, 2, 4, 1, 1, 5, 7, 8, 1, 5, 6, 5, 3, 8, 7, 7, 8, 4, 0, 8, 0, 1, 6, 0, 7, 5, 3, 5, 1, 3, 3, 3, 2, 8, 7, 1, 1, 5, 8, 7, 1, 4, 8, 4, 1, 8, 5, 8, 3, 8, 4, 7, 1, 6, 5, 3, 4, 2, 3, 2, 0, 4, 7, 1, 1, 2, 2, 0, 1, 8, 6, 8, 4]
permutation_order: [0 3 1 7 6 4 2 8 5]
Best ll: -267.89049120308005
Rounded LL: -329.2461059618536
Comparison: real_ll: -72.28491741266801 - inferred_ll: -329.2461059618536
Hamming Distance: 13
weights:
[[0 0 0 0 1 1 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [2, 1, 4, 1, 7, 7, 7, 6, 3, 1, 7, 0, 6, 6, 0, 7, 4, 3, 1, 5, 0, 0, 0, 8, 0, 6, 3, 6, 0, 8, 3, 7, 7, 8, 3, 5, 3, 3, 7, 4, 0, 6, 8, 1, 2, 4, 1, 5, 8, 6, 8, 3, 4, 4, 7, 8, 6, 0, 7, 3, 6, 6, 2, 5, 8, 5, 1, 7, 8, 1, 2, 8, 6, 5, 7, 0, 7, 0, 4, 6, 2, 2, 8, 3, 0, 3, 8, 8, 3, 6]
permutation_order: [0 3 6 7 1 4 8 2 5]
Best ll: -239.42487258809817
Rounded LL: -232.5556399117593
Comparison: real_ll: -71.7174344853762 - inferred_ll: -232.5556399117593
Hamming Distance: 11
weights:
[[0 1 1 0 0 1 1 0 1]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [0, 1, 1, 5, 2, 4, 4, 3, 0, 2, 6, 6, 8, 5, 8, 7, 8, 4, 0, 0, 5, 7, 5, 6, 6, 8, 2, 8, 2, 3, 3, 0, 2, 5, 2, 2, 8, 8, 5, 8, 8, 2, 7, 6, 8, 5, 5, 5, 7, 2, 6, 7, 8, 3, 7, 4, 7, 8, 8, 5, 7, 7, 5, 8, 7, 7, 3, 5, 2, 4, 7, 4, 4, 8, 8, 8, 8, 6, 4, 3, 7, 8, 5, 1, 5, 0, 3, 1, 0, 0]
permutation_order: [0 3 7 6 1 2 4 5 8]
Best ll: -266.0391422334377
Rounded LL: -331.4915070874174
Comparison: real_ll: -71.09726187289102 - inferred_ll: -331.4915070874174
Hamming Distance: 9
weights:
[[0 0 1 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [3, 8, 2, 5, 7, 1, 0, 7, 4, 8, 3, 3, 7, 8, 8, 7, 6, 2, 3, 2, 8, 6, 0, 1, 2, 0, 4, 0, 4, 7, 6, 6, 6, 7, 2, 5, 1, 0, 2, 7, 3, 4, 6, 4, 6, 8, 6, 5, 8, 6, 3, 5, 0, 4, 2, 5, 8, 1, 3, 4, 4, 1, 1, 7, 7, 1, 5, 1, 6, 2, 0, 4, 6, 6, 1, 0, 0, 6, 5, 8, 4, 8, 3, 0, 4, 0, 1, 1, 8, 0]
permutation_order: [0 3 1 6 7 4 2 8 5]
Best ll: -191.32344892793046
Rounded LL: -264.0368502301908
Comparison: real_ll: -63.04092754770519 - inferred_ll: -264.0368502301908
Hamming Distance: 13
weights:
[[0 0 0 0 1 1 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [1, 0, 4, 3, 3, 2, 1, 8, 1, 6, 0, 0, 1, 3, 3, 8, 0, 8, 3, 8, 6, 3, 7, 4, 0, 2, 6, 5, 4, 2, 3, 5, 1, 1, 6, 1, 5, 5, 4, 0, 7, 8, 1, 6, 1, 8, 4, 5, 3, 1, 0, 3, 4, 1, 3, 1, 6, 4, 7, 5, 2, 5, 5, 3, 4, 1, 2, 8, 3, 2, 7, 6, 4, 8, 3, 5, 0, 3, 0, 5, 6, 4, 1, 3, 5, 3, 7, 6, 7, 2]
permutation_order: [3 0 1 4 6 2 5 7 8]
Best ll: -188.8979508702862
Rounded LL: -226.44677492093433
Comparison: real_ll: -71.88882159547425 - inferred_ll: -226.44677492093433
Hamming Distance: 15
weights:
[[0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [6, 6, 3, 2, 3, 3, 2, 1, 4, 6, 8, 8, 1, 7, 3, 6, 3, 5, 6, 3, 2, 7, 2, 5, 1, 8, 1, 7, 5, 6, 0, 4, 8, 0, 6, 3, 5, 8, 1, 7, 8, 3, 7, 0, 5, 2, 3, 2, 7, 2, 8, 2, 0, 1, 0, 2, 7, 6, 1, 6, 1, 2, 4, 0, 6, 5, 2, 8, 6, 3, 0, 3, 7, 4, 8, 6, 2, 5, 7, 0, 2, 2, 6, 1, 1, 1, 2, 4, 2, 2]
permutation_order: [0 1 3 6 2 7 4 5 8]
Best ll: -189.72011631961
Rounded LL: -249.39998125098148
Comparison: real_ll: -76.75088655671733 - inferred_ll: -249.39998125098148
Hamming Distance: 12
weights:
[[0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [2, 7, 7, 2, 6, 5, 6, 8, 1, 8, 1, 1, 7, 4, 0, 3, 5, 3, 4, 3, 2, 2, 3, 5, 5, 6, 3, 6, 7, 8, 4, 6, 2, 1, 2, 0, 6, 2, 2, 3, 2, 0, 3, 7, 6, 2, 8, 0, 3, 8, 4, 5, 8, 5, 8, 5, 7, 6, 0, 1, 4, 6, 4, 3, 6, 8, 7, 4, 2, 0, 5, 2, 0, 4, 1, 0, 3, 4, 8, 3, 5, 5, 7, 0, 1, 7, 3, 8, 1, 3]
permutation_order: [0 3 1 2 6 4 7 5 8]
Best ll: -199.75797665736056
Rounded LL: -238.5709902660113
Comparison: real_ll: -63.37642969141557 - inferred_ll: -238.5709902660113
Hamming Distance: 14
weights:
[[0 1 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [6, 2, 6, 0, 2, 0, 4, 1, 8, 0, 3, 7, 4, 3, 7, 2, 6, 3, 7, 8, 8, 5, 6, 5, 3, 1, 8, 0, 5, 8, 1, 2, 5, 1, 4, 4, 5, 2, 0, 7, 3, 1, 7, 2, 3, 0, 5, 5, 6, 1, 1, 5, 1, 4, 7, 2, 6, 2, 3, 2, 2, 1, 6, 3, 0, 7, 8, 6, 2, 4, 7, 8, 1, 2, 0, 3, 1, 0, 7, 6, 6, 1, 7, 7, 3, 8, 7, 1, 5, 2]
permutation_order: [0 3 1 2 6 7 4 5 8]
Best ll: -212.40907895647013
Rounded LL: -248.8483770990197
Comparison: real_ll: -57.62130778049491 - inferred_ll: -248.8483770990197
Hamming Distance: 18
weights:
[[0 1 0 0 1 1 1 1 1]
 [0 0 0 0 1 1 0 1 1]
 [0 0 0 0 1 1 0 1 1]
 [0 0 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 1 0 0 1]
 [0 0 0 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [0, 5, 4, 6, 1, 1, 0, 8, 5, 7, 0, 2, 8, 5, 6, 4, 1, 5, 4, 2, 1, 4, 7, 2, 7, 1, 3, 7, 0, 6, 1, 8, 0, 0, 8, 8, 3, 2, 4, 2, 8, 0, 4, 1, 6, 0, 0, 3, 8, 3, 6, 7, 3, 8, 6, 7, 2, 0, 8, 7, 7, 2, 7, 7, 3, 0, 3, 7, 5, 8, 8, 4, 0, 2, 7, 6, 7, 3, 0, 4, 3, 5, 0, 4, 2, 2, 0, 5, 1, 8]
permutation_order: [0 3 1 7 6 2 4 8 5]
Best ll: -239.2798692308019
Rounded LL: -272.728110721985
Comparison: real_ll: -75.23158436197775 - inferred_ll: -272.728110721985
Hamming Distance: 14
weights:
[[0 0 0 0 1 1 1 1 1]
 [0 0 0 0 1 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [1, 8, 7, 7, 2, 5, 1, 3, 2, 4, 0, 4, 6, 3, 6, 1, 4, 0, 3, 8, 3, 2, 5, 2, 1, 8, 7, 5, 2, 7, 7, 0, 0, 3, 1, 3, 6, 4, 8, 5, 0, 2, 7, 1, 6, 8, 2, 3, 3, 1, 0, 3, 0, 8, 4, 2, 3, 7, 5, 7, 1, 0, 6, 8, 1, 6, 1, 0, 4, 6, 8, 4, 7, 0, 7, 0, 0, 7, 1, 1, 4, 1, 1, 8, 7, 5, 2, 6, 6, 2]
permutation_order: [0 3 1 7 6 4 2 5 8]
Best ll: -201.41554109847442
Rounded LL: -235.89767168303882
Comparison: real_ll: -67.55395716359615 - inferred_ll: -235.89767168303882
Hamming Distance: 14
weights:
[[0 0 0 0 1 1 0 1 1]
 [0 0 0 0 1 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]]
/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py:101: RuntimeWarning: overflow encountered in scalar power
  V_ik= -(D @ exp_weights @ D)[i][k] / (1 + D[i][k])**2 * exp_weights[i][k] * D[i][k]