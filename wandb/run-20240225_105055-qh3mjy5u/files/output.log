end_nodes: [6, 6, 0, 4, 8, 7, 6, 4, 7, 5, 3, 8, 2, 4, 2, 1, 4, 8, 2, 4, 1, 1, 5, 7, 8, 1, 5, 6, 5, 3, 8, 7, 7, 8, 4, 0, 8, 0, 1, 6, 0, 7, 5, 3, 5, 1, 3, 3, 3, 2, 8, 7, 1, 1, 5, 8, 7, 1, 4, 8, 4, 1, 8, 5, 8, 3, 8, 4, 7, 1, 6, 5, 3, 4, 2, 3, 2, 0, 4, 7, 1, 1, 2, 2, 0, 1, 8, 6, 8, 4]
permutation_order: [1 0 3 4 5 6 2 8 7]
Best ll: -173.31855268475448
Rounded LL: -236.55687014093166
Comparison: real_ll: -79.06274625458828 - inferred_ll: -236.55687014093166
Hamming Distance: 10
weights:
[[0 0 1 0 1 1 0 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [2, 1, 4, 1, 7, 7, 7, 6, 3, 1, 7, 0, 6, 6, 0, 7, 4, 3, 1, 5, 0, 0, 0, 8, 0, 6, 3, 6, 0, 8, 3, 7, 7, 8, 3, 5, 3, 3, 7, 4, 0, 6, 8, 1, 2, 4, 1, 5, 8, 6, 8, 3, 4, 4, 7, 8, 6, 0, 7, 3, 6, 6, 2, 5, 8, 5, 1, 7, 8, 1, 2, 8, 6, 5, 7, 0, 7, 0, 4, 6, 2, 2, 8, 3, 0, 3, 8, 8, 3, 6]
permutation_order: [0 1 3 4 5 6 2 7 8]
Best ll: -168.4275969783895
Rounded LL: -180.13585239052802
Comparison: real_ll: -79.45686143978271 - inferred_ll: -180.13585239052802
Hamming Distance: 10
weights:
[[0 0 1 1 1 1 1 1 1]
 [0 0 1 0 1 1 0 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [0, 1, 1, 5, 2, 4, 4, 3, 0, 2, 6, 6, 8, 5, 8, 7, 8, 4, 0, 0, 5, 7, 5, 6, 6, 8, 2, 8, 2, 3, 3, 0, 2, 5, 2, 2, 8, 8, 5, 8, 8, 2, 7, 6, 8, 5, 5, 5, 7, 2, 6, 7, 8, 3, 7, 4, 7, 8, 8, 5, 7, 7, 5, 8, 7, 7, 3, 5, 2, 4, 7, 4, 4, 8, 8, 8, 8, 6, 4, 3, 7, 8, 5, 1, 5, 0, 3, 1, 0, 0]
permutation_order: [1 0 3 4 5 2 6 8 7]
Best ll: -222.2125584296511
Rounded LL: -293.98066789907347
Comparison: real_ll: -88.58917625760911 - inferred_ll: -293.98066789907347
Hamming Distance: 14
weights:
[[0 0 1 0 1 0 1 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [3, 8, 2, 5, 7, 1, 0, 7, 4, 8, 3, 3, 7, 8, 8, 7, 6, 2, 3, 2, 8, 6, 0, 1, 2, 0, 4, 0, 4, 7, 6, 6, 6, 7, 2, 5, 1, 0, 2, 7, 3, 4, 6, 4, 6, 8, 6, 5, 8, 6, 3, 5, 0, 4, 2, 5, 8, 1, 3, 4, 4, 1, 1, 7, 7, 1, 5, 1, 6, 2, 0, 4, 6, 6, 1, 0, 0, 6, 5, 8, 4, 8, 3, 0, 4, 0, 1, 1, 8, 0]
permutation_order: [1 0 4 3 5 6 2 8 7]
Best ll: -178.05011247039718
Rounded LL: -252.53569418479566
Comparison: real_ll: -67.71904242906481 - inferred_ll: -252.53569418479566
Hamming Distance: 10
weights:
[[0 0 1 0 0 1 0 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [1, 0, 4, 3, 3, 2, 1, 8, 1, 6, 0, 0, 1, 3, 3, 8, 0, 8, 3, 8, 6, 3, 7, 4, 0, 2, 6, 5, 4, 2, 3, 5, 1, 1, 6, 1, 5, 5, 4, 0, 7, 8, 1, 6, 1, 8, 4, 5, 3, 1, 0, 3, 4, 1, 3, 1, 6, 4, 7, 5, 2, 5, 5, 3, 4, 1, 2, 8, 3, 2, 7, 6, 4, 8, 3, 5, 0, 3, 0, 5, 6, 4, 1, 3, 5, 3, 7, 6, 7, 2]
permutation_order: [1 0 3 4 5 6 2 8 7]
Best ll: -155.519236114276
Rounded LL: -195.670663303393
Comparison: real_ll: -73.49875398341399 - inferred_ll: -195.670663303393
Hamming Distance: 10
weights:
[[0 0 1 0 1 1 0 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [6, 6, 3, 2, 3, 3, 2, 1, 4, 6, 8, 8, 1, 7, 3, 6, 3, 5, 6, 3, 2, 7, 2, 5, 1, 8, 1, 7, 5, 6, 0, 4, 8, 0, 6, 3, 5, 8, 1, 7, 8, 3, 7, 0, 5, 2, 3, 2, 7, 2, 8, 2, 0, 1, 0, 2, 7, 6, 1, 6, 1, 2, 4, 0, 6, 5, 2, 8, 6, 3, 0, 3, 7, 4, 8, 6, 2, 5, 7, 0, 2, 2, 6, 1, 1, 1, 2, 4, 2, 2]
permutation_order: [1 0 3 4 5 2 6 7 8]
Best ll: -190.17577046065543
Rounded LL: -216.85117772553883
Comparison: real_ll: -85.47364602986113 - inferred_ll: -216.85117772553883
Hamming Distance: 12
weights:
[[0 0 1 0 1 0 1 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [2, 7, 7, 2, 6, 5, 6, 8, 1, 8, 1, 1, 7, 4, 0, 3, 5, 3, 4, 3, 2, 2, 3, 5, 5, 6, 3, 6, 7, 8, 4, 6, 2, 1, 2, 0, 6, 2, 2, 3, 2, 0, 3, 7, 6, 2, 8, 0, 3, 8, 4, 5, 8, 5, 8, 5, 7, 6, 0, 1, 4, 6, 4, 3, 6, 8, 7, 4, 2, 0, 5, 2, 0, 4, 1, 0, 3, 4, 8, 3, 5, 5, 7, 0, 1, 7, 3, 8, 1, 3]
permutation_order: [1 0 3 4 5 2 6 7 8]
Best ll: -197.16762472293246
Rounded LL: -235.0780290808387
Comparison: real_ll: -75.9817442169044 - inferred_ll: -235.0780290808387
Hamming Distance: 12
weights:
[[0 0 1 0 1 0 1 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [6, 2, 6, 0, 2, 0, 4, 1, 8, 0, 3, 7, 4, 3, 7, 2, 6, 3, 7, 8, 8, 5, 6, 5, 3, 1, 8, 0, 5, 8, 1, 2, 5, 1, 4, 4, 5, 2, 0, 7, 3, 1, 7, 2, 3, 0, 5, 5, 6, 1, 1, 5, 1, 4, 7, 2, 6, 2, 3, 2, 2, 1, 6, 3, 0, 7, 8, 6, 2, 4, 7, 8, 1, 2, 0, 3, 1, 0, 7, 6, 6, 1, 7, 7, 3, 8, 7, 1, 5, 2]
permutation_order: [1 0 3 4 5 6 2 7 8]
Best ll: -164.64842515021215
Rounded LL: -180.5811730157073
Comparison: real_ll: -65.6688244014092 - inferred_ll: -180.5811730157073
Hamming Distance: 8
weights:
[[0 0 1 0 1 1 0 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [0, 5, 4, 6, 1, 1, 0, 8, 5, 7, 0, 2, 8, 5, 6, 4, 1, 5, 4, 2, 1, 4, 7, 2, 7, 1, 3, 7, 0, 6, 1, 8, 0, 0, 8, 8, 3, 2, 4, 2, 8, 0, 4, 1, 6, 0, 0, 3, 8, 3, 6, 7, 3, 8, 6, 7, 2, 0, 8, 7, 7, 2, 7, 7, 3, 0, 3, 7, 5, 8, 8, 4, 0, 2, 7, 6, 7, 3, 0, 4, 3, 5, 0, 4, 2, 2, 0, 5, 1, 8]
permutation_order: [1 0 3 4 5 2 6 7 8]
Best ll: -173.31955155319096
Rounded LL: -197.41386841790137
Comparison: real_ll: -73.33492851732773 - inferred_ll: -197.41386841790137
Hamming Distance: 12
weights:
[[0 0 1 0 1 0 1 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
end_nodes: [1, 8, 7, 7, 2, 5, 1, 3, 2, 4, 0, 4, 6, 3, 6, 1, 4, 0, 3, 8, 3, 2, 5, 2, 1, 8, 7, 5, 2, 7, 7, 0, 0, 3, 1, 3, 6, 4, 8, 5, 0, 2, 7, 1, 6, 8, 2, 3, 3, 1, 0, 3, 0, 8, 4, 2, 3, 7, 5, 7, 1, 0, 6, 8, 1, 6, 1, 0, 4, 6, 8, 4, 7, 0, 7, 0, 0, 7, 1, 1, 4, 1, 1, 8, 7, 5, 2, 6, 6, 2]
permutation_order: [1 0 4 3 5 6 2 7 8]
Best ll: -167.80486071364314
Rounded LL: -205.8321193926336
Comparison: real_ll: -64.08279475222638 - inferred_ll: -205.8321193926336
Hamming Distance: 8
weights:
[[0 0 1 0 0 1 0 1 1]
 [0 0 1 1 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0]]
/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py:101: RuntimeWarning: overflow encountered in scalar power
  V_ik= -(D @ exp_weights @ D)[i][k] / (1 + D[i][k])**2 * exp_weights[i][k] * D[i][k]