end_nodes: [12, 13, 1, 8, 16, 15, 12, 9, 15, 11, 18, 6, 16, 4, 9, 4, 3, 8, 17, 4, 9, 3, 2, 10, 15, 17, 3, 11, 13, 10, 6, 17, 15, 14, 16, 8, 1, 17, 0, 2, 12, 0, 15, 10, 7, 10, 2, 6, 18, 7, 7, 4, 17, 14, 2, 2, 10, 16, 15, 3, 9, 17, 9, 3, 17, 10, 17, 6, 17, 18, 9, 14, 2, 12, 10, 18, 7, 9, 5, 6, 5, 1, 8, 15, 2, 2, 4, 4, 1, 2, 17, 12, 16, 8, 16, 7, 6, 18, 13, 18, 8, 14, 15, 11, 2, 10, 3, 15, 18, 10, 6, 7, 0, 8, 3, 7, 11, 5, 10, 13, 1, 3, 4, 7, 1, 18, 17, 2, 0, 3, 6, 18, 3, 12, 2, 11, 3, 1, 0, 6, 5, 3, 15, 6, 1, 0, 17, 13, 3, 8, 2, 7, 2, 9, 11, 13, 5, 1, 16, 14, 1, 3, 12, 6, 8, 11, 15, 18, 5, 6, 1, 5, 5, 10, 16, 8, 3, 14, 5, 0, 15, 13, 18, 16, 9, 11, 12, 8, 4, 17, 0, 14, 2, 10, 1, 17, 8, 4, 7, 15, 11, 9, 11, 18, 4, 9, 12, 13, 2, 0, 6, 10, 5, 7, 7, 14, 12, 18, 13, 1, 12, 18, 13, 1, 5, 14, 2, 8, 5, 14, 16, 15, 17, 0, 1, 15, 10, 9, 14, 1, 13, 6, 17, 2, 4, 0, 12, 13, 10, 0, 6, 0, 0, 16, 3, 6, 3, 6, 9, 8, 5, 3, 15, 12, 2, 0, 8, 14, 3, 8, 4, 16, 11, 3, 4, 8, 0, 1, 1, 6, 8, 17, 10, 11, 18, 1, 15, 14, 13, 11, 17, 5, 6, 12, 18, 9, 0, 4, 4, 8, 10, 10, 11, 2, 10, 1, 1, 8, 5, 4, 18, 9, 11, 12, 17, 4, 9, 3, 15, 7, 1, 9, 5, 16, 2, 9, 12, 10, 9, 13, 3, 3, 17, 15, 15, 10, 10, 3, 15, 3, 15, 13, 1, 9, 10, 4, 5, 18, 12, 2, 2, 2, 6, 7, 1, 12, 0, 3, 12, 17, 16, 9, 14, 15, 18, 6, 13, 2, 11, 7, 8, 18, 5, 13, 6, 11, 3, 2, 0, 16, 14, 6, 3, 15, 12, 8, 6, 1, 6, 4, 3, 6, 14, 12, 11, 17, 4, 3, 15, 4, 18, 12, 13, 16, 15, 10, 15, 15, 6, 17, 7, 0, 10, 10, 10, 1, 16, 4, 8, 4, 12, 18, 9, 15, 2, 2, 16, 1, 2, 7, 4, 1, 9, 0, 14, 10, 5, 4, 14, 11, 16, 12, 16, 16, 1, 18, 2, 16, 2, 13, 6, 9, 17, 13, 15, 12, 18, 7, 0, 0, 5, 9, 16, 18, 8, 10, 2, 15, 8, 9, 13, 12, 12, 1, 5, 4, 7, 9, 10, 1, 1, 15, 13, 4, 15, 2, 4, 11, 13, 1, 14, 12, 14, 1, 3, 15, 4, 0, 1, 4, 10, 3, 17, 11, 6, 12, 15, 3, 1, 14, 10, 3, 9, 4, 12, 9, 3, 16, 6, 1, 12, 14, 11, 6, 14, 11, 2, 1, 1, 15, 8, 0, 16, 18, 18, 6, 7, 2, 16, 16, 13, 16, 9, 3, 4, 13, 18, 13, 2, 3, 13, 2, 3, 13, 4, 0, 14, 13, 13, 0, 15, 10, 8, 2, 11, 2, 3, 11, 0, 11, 11, 5, 0, 7, 11, 2, 4, 6, 0, 6, 3, 0, 9, 11, 0, 7, 4, 5, 14, 3, 15, 11, 8, 4, 0, 6, 11, 10, 15, 9, 9, 17, 10, 5, 18, 2, 3, 17, 18, 9, 5, 12, 4, 4, 7, 10, 16, 7, 7, 5, 9, 11, 13, 1, 4, 0, 12, 2, 2, 4, 13, 9, 17, 13, 4, 18, 13, 9, 11, 2, 7, 14, 11, 16, 1, 12, 13, 0, 13, 10, 14, 6, 11, 9, 15, 2, 5, 3, 8, 3, 17, 4, 14, 12, 5, 13, 13, 5, 7, 14, 10, 16, 4, 11, 14, 2, 15, 6, 9, 0, 14, 14, 0, 6, 9, 3, 9, 17, 4, 13, 15, 2, 15, 7, 17, 12, 8, 0, 3, 8, 1, 0, 8, 12, 16, 18, 12, 14, 3, 8, 11, 9, 6, 2, 1, 2, 8, 9, 17, 10, 3, 16]
permutation_order: [ 0  4  1  3  2  8 10  5  6  9  7 11 15 13 12 14 16 17 18]
Best ll: -2989.6062400861438
Rounded LL: -6098.887624011162
Comparison: real_ll: -1790.6471162123426 - inferred_ll: -6098.887624011162
Hamming Distance: 90
weights:
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [4, 18, 2, 8, 3, 15, 14, 15, 12, 6, 3, 15, 0, 12, 13, 0, 14, 8, 7, 18, 3, 10, 0, 0, 0, 17, 0, 12, 6, 13, 0, 16, 7, 14, 15, 17, 7, 11, 7, 7, 14, 9, 0, 13, 17, 3, 5, 9, 3, 10, 16, 13, 16, 6, 9, 9, 18, 15, 16, 12, 18, 1, 15, 7, 12, 13, 5, 11, 17, 11, 2, 14, 16, 3, 5, 16, 12, 11, 15, 0, 15, 1, 9, 18, 18, 12, 5, 5, 16, 7, 0, 6, 17, 17, 7, 12, 16, 11, 18, 11, 14, 8, 17, 0, 12, 16, 4, 16, 17, 6, 13, 1, 15, 11, 18, 17, 6, 16, 13, 15, 11, 13, 11, 0, 17, 17, 10, 14, 0, 7, 5, 17, 18, 5, 2, 17, 8, 1, 2, 2, 0, 14, 0, 8, 7, 8, 3, 5, 11, 9, 2, 5, 5, 8, 16, 5, 8, 9, 14, 10, 15, 15, 3, 0, 9, 12, 10, 13, 6, 8, 3, 8, 16, 6, 13, 0, 7, 0, 12, 4, 1, 5, 14, 16, 13, 17, 7, 16, 14, 7, 16, 0, 12, 18, 10, 13, 1, 9, 4, 6, 1, 9, 2, 2, 9, 9, 5, 13, 18, 8, 4, 0, 17, 1, 18, 6, 18, 14, 5, 16, 1, 12, 6, 11, 3, 6, 18, 13, 18, 6, 15, 3, 12, 9, 16, 15, 0, 10, 12, 9, 0, 5, 6, 10, 18, 4, 10, 13, 6, 8, 3, 12, 17, 11, 17, 15, 17, 7, 2, 1, 2, 4, 5, 5, 17, 6, 8, 10, 16, 8, 11, 10, 10, 3, 9, 7, 15, 4, 18, 17, 3, 10, 1, 13, 2, 12, 4, 4, 10, 3, 18, 12, 2, 18, 17, 7, 18, 2, 8, 11, 9, 18, 17, 3, 14, 8, 3, 1, 9, 0, 0, 2, 13, 3, 1, 6, 7, 18, 13, 5, 3, 14, 5, 7, 5, 3, 13, 12, 17, 9, 17, 8, 15, 10, 3, 6, 10, 1, 0, 0, 9, 10, 14, 12, 10, 12, 2, 2, 10, 14, 3, 8, 6, 17, 15, 11, 8, 5, 17, 6, 9, 6, 7, 11, 2, 8, 2, 14, 2, 18, 10, 7, 12, 9, 1, 10, 5, 10, 18, 9, 7, 10, 3, 17, 18, 2, 7, 7, 0, 7, 12, 2, 8, 17, 2, 2, 0, 0, 9, 11, 15, 15, 4, 3, 16, 10, 2, 16, 5, 5, 4, 4, 10, 9, 3, 16, 9, 4, 6, 4, 17, 1, 10, 17, 6, 5, 9, 13, 17, 5, 1, 7, 8, 2, 14, 13, 17, 8, 17, 14, 17, 14, 0, 12, 10, 5, 8, 15, 0, 13, 18, 0, 1, 11, 18, 4, 18, 4, 4, 8, 8, 12, 18, 12, 5, 2, 7, 15, 0, 5, 16, 10, 16, 14, 7, 7, 10, 15, 15, 7, 13, 10, 17, 8, 7, 1, 2, 16, 11, 5, 16, 6, 9, 9, 9, 17, 11, 5, 14, 2, 3, 16, 18, 12, 5, 4, 8, 13, 6, 18, 1, 15, 12, 11, 12, 16, 5, 17, 1, 16, 2, 8, 3, 8, 2, 4, 2, 14, 7, 12, 13, 12, 5, 10, 14, 4, 15, 6, 3, 13, 17, 13, 3, 9, 8, 7, 12, 17, 0, 6, 16, 14, 18, 0, 0, 7, 8, 6, 5, 9, 4, 17, 6, 8, 9, 18, 8, 14, 5, 17, 11, 15, 13, 3, 6, 18, 12, 6, 9, 3, 0, 3, 18, 0, 17, 9, 4, 2, 16, 11, 18, 9, 13, 16, 11, 16, 10, 0, 3, 14, 14, 11, 9, 17, 12, 10, 18, 15, 3, 12, 12, 6, 17, 0, 8, 16, 6, 14, 16, 13, 9, 5, 14, 16, 6, 11, 16, 0, 12, 18, 13, 12, 10, 18, 2, 15, 7, 9, 0, 13, 4, 12, 8, 5, 2, 0, 11, 8, 13, 17, 9, 4, 14, 8, 15, 5, 14, 16, 1, 8, 16, 3, 18, 13, 2, 11, 2, 14, 0, 5, 16, 5, 2, 12, 8, 9, 6, 16, 6, 7, 10, 8, 2, 2, 16, 11, 14, 16, 17, 1, 5, 9, 17, 8, 11, 7, 12, 17, 12, 5, 15, 8, 10, 7, 8, 7, 0, 12, 10, 13, 7, 8, 6, 2, 5, 18, 14, 18, 4, 8, 14, 16]
permutation_order: [ 0  4  1  3  2  8  5 10  6  7  9 11 13 15 16 12 17 14 18]
Best ll: -3226.6351508867633
Rounded LL: -7114.381463410743
Comparison: real_ll: -1853.949519770693 - inferred_ll: -7114.381463410743
Hamming Distance: 82
weights:
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [1, 2, 2, 11, 5, 9, 8, 6, 1, 18, 5, 13, 12, 16, 11, 17, 14, 16, 8, 1, 0, 11, 14, 10, 12, 13, 16, 5, 17, 5, 7, 7, 0, 5, 10, 5, 4, 16, 16, 11, 16, 17, 5, 14, 13, 16, 11, 18, 11, 11, 14, 5, 12, 14, 16, 7, 15, 8, 15, 16, 16, 11, 14, 14, 11, 18, 17, 14, 15, 7, 10, 5, 8, 15, 9, 9, 16, 17, 16, 16, 18, 13, 9, 6, 15, 16, 11, 2, 10, 0, 6, 3, 1, 18, 1, 8, 18, 7, 3, 16, 4, 8, 7, 6, 1, 13, 1, 1, 11, 11, 5, 7, 0, 2, 3, 2, 0, 1, 0, 11, 8, 4, 5, 5, 16, 0, 12, 18, 1, 7, 4, 1, 0, 11, 3, 9, 10, 15, 0, 9, 14, 17, 1, 8, 12, 4, 15, 7, 2, 10, 3, 0, 14, 4, 16, 18, 12, 15, 16, 10, 4, 10, 8, 8, 13, 0, 17, 4, 1, 8, 1, 4, 5, 5, 3, 14, 7, 16, 1, 7, 7, 14, 2, 8, 2, 18, 7, 11, 8, 13, 8, 16, 0, 4, 1, 12, 13, 5, 3, 16, 2, 7, 3, 3, 0, 5, 7, 3, 6, 0, 16, 14, 14, 9, 17, 12, 6, 6, 13, 13, 16, 0, 18, 18, 1, 13, 16, 18, 5, 3, 15, 11, 0, 16, 3, 11, 9, 11, 9, 0, 13, 3, 3, 9, 6, 0, 14, 1, 13, 15, 14, 6, 18, 2, 0, 9, 0, 11, 9, 2, 7, 15, 6, 3, 18, 11, 12, 14, 4, 11, 12, 3, 8, 3, 3, 2, 10, 12, 6, 3, 0, 15, 1, 15, 9, 11, 14, 4, 11, 8, 15, 16, 15, 13, 15, 9, 12, 7, 5, 15, 8, 17, 13, 2, 18, 18, 3, 2, 11, 5, 17, 4, 13, 2, 2, 1, 4, 9, 12, 7, 10, 14, 5, 16, 9, 3, 4, 17, 13, 3, 10, 16, 7, 16, 8, 5, 5, 14, 7, 12, 11, 18, 4, 14, 14, 0, 12, 5, 12, 16, 1, 15, 8, 12, 8, 13, 15, 11, 17, 10, 2, 7, 17, 6, 12, 12, 0, 10, 14, 16, 14, 5, 3, 0, 12, 6, 18, 12, 6, 3, 12, 17, 6, 8, 18, 18, 6, 15, 4, 0, 13, 15, 8, 16, 18, 5, 14, 6, 2, 11, 0, 15, 17, 2, 18, 15, 10, 14, 8, 16, 14, 0, 2, 11, 5, 12, 8, 4, 1, 5, 15, 12, 14, 9, 4, 0, 9, 17, 14, 0, 11, 1, 17, 12, 18, 14, 6, 9, 15, 4, 15, 17, 9, 2, 8, 10, 9, 10, 9, 12, 16, 2, 16, 6, 12, 16, 4, 16, 2, 9, 1, 7, 14, 17, 7, 16, 8, 1, 3, 3, 12, 11, 6, 10, 11, 2, 10, 14, 11, 5, 15, 14, 9, 14, 4, 14, 6, 8, 10, 5, 3, 7, 15, 6, 11, 5, 11, 4, 4, 7, 8, 17, 12, 12, 10, 8, 16, 18, 10, 12, 9, 17, 2, 11, 9, 12, 15, 5, 8, 11, 14, 15, 2, 5, 10, 12, 4, 0, 3, 11, 5, 11, 2, 13, 0, 17, 10, 7, 12, 17, 9, 15, 4, 11, 10, 6, 15, 3, 4, 6, 10, 8, 4, 13, 11, 8, 2, 10, 6, 7, 7, 1, 10, 11, 1, 4, 5, 2, 13, 14, 8, 4, 10, 16, 18, 3, 10, 12, 7, 1, 12, 15, 15, 10, 17, 2, 18, 16, 17, 15, 12, 14, 5, 13, 12, 16, 14, 1, 3, 14, 18, 4, 3, 16, 5, 2, 12, 9, 14, 0, 8, 3, 11, 7, 5, 0, 4, 13, 2, 10, 14, 1, 15, 7, 2, 15, 4, 17, 0, 4, 16, 17, 1, 1, 6, 17, 0, 16, 10, 16, 7, 4, 11, 15, 0, 4, 17, 3, 7, 3, 14, 6, 1, 6, 12, 10, 12, 16, 16, 5, 16, 3, 4, 6, 5, 12, 6, 9, 10, 13, 4, 13, 4, 12, 10, 9, 3, 17, 3, 15, 8, 9, 16, 15, 8, 7, 13, 4, 17, 3, 0, 17, 6, 6, 6, 12, 18, 1, 4, 0, 8, 15, 17, 1, 7, 4, 10, 1, 6, 3, 4, 17, 5, 2, 14, 9, 6, 5, 10, 8, 16, 18]
permutation_order: [ 0  4  1  3  2  8  5 10  6 11  9  7 15 13 14 16 12 17 18]
Best ll: -3137.803889103559
Rounded LL: -5382.481496724525
Comparison: real_ll: -1821.8695379356354 - inferred_ll: -5382.481496724525
Hamming Distance: 78
weights:
[[0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [7, 18, 17, 4, 11, 15, 18, 2, 0, 15, 8, 17, 7, 6, 15, 17, 17, 15, 12, 4, 7, 4, 16, 12, 0, 2, 5, 18, 1, 9, 0, 8, 15, 12, 13, 12, 18, 14, 4, 11, 3, 1, 4, 15, 6, 8, 13, 9, 13, 16, 12, 18, 11, 17, 18, 13, 18, 7, 10, 0, 8, 5, 10, 17, 18, 18, 3, 6, 18, 8, 9, 3, 2, 15, 15, 2, 11, 2, 13, 4, 0, 9, 13, 13, 3, 1, 1, 12, 18, 10, 17, 8, 16, 7, 1, 9, 0, 2, 3, 17, 1, 6, 13, 9, 8, 4, 1, 10, 10, 11, 4, 12, 12, 14, 16, 12, 17, 3, 16, 8, 13, 7, 9, 13, 8, 16, 9, 17, 10, 0, 13, 18, 10, 0, 12, 18, 4, 1, 10, 14, 11, 11, 8, 15, 0, 18, 1, 0, 11, 8, 14, 9, 18, 10, 5, 11, 5, 10, 11, 8, 9, 12, 3, 0, 18, 4, 9, 16, 7, 8, 7, 10, 5, 13, 3, 3, 10, 10, 7, 14, 5, 2, 10, 6, 18, 14, 8, 7, 3, 1, 16, 6, 10, 18, 5, 8, 10, 2, 11, 18, 4, 13, 9, 16, 8, 14, 11, 13, 9, 13, 18, 13, 1, 13, 4, 6, 0, 15, 16, 13, 17, 7, 1, 14, 16, 9, 17, 10, 7, 2, 18, 9, 3, 7, 1, 1, 16, 6, 13, 18, 1, 0, 15, 3, 5, 16, 9, 7, 0, 16, 17, 13, 1, 3, 10, 4, 8, 17, 15, 1, 11, 7, 6, 3, 17, 3, 5, 7, 8, 4, 0, 15, 18, 12, 1, 8, 7, 8, 16, 16, 13, 1, 15, 10, 0, 1, 4, 1, 3, 1, 2, 15, 1, 2, 16, 16, 15, 10, 5, 10, 2, 11, 12, 12, 18, 9, 11, 8, 6, 10, 13, 3, 4, 17, 0, 12, 2, 18, 5, 1, 11, 14, 17, 12, 1, 13, 1, 11, 15, 10, 13, 13, 14, 0, 7, 6, 17, 8, 18, 2, 13, 7, 13, 4, 0, 10, 11, 17, 8, 3, 14, 3, 16, 12, 3, 10, 18, 17, 3, 18, 0, 15, 4, 7, 12, 1, 16, 2, 18, 3, 12, 5, 0, 10, 3, 0, 3, 15, 9, 18, 9, 2, 1, 18, 16, 16, 7, 3, 17, 3, 17, 1, 17, 10, 18, 5, 2, 7, 5, 7, 14, 12, 8, 11, 12, 11, 17, 13, 2, 12, 16, 7, 13, 5, 13, 18, 18, 16, 15, 4, 12, 4, 5, 3, 15, 15, 16, 14, 18, 5, 4, 8, 6, 4, 18, 16, 10, 7, 17, 9, 13, 18, 18, 8, 6, 9, 0, 8, 15, 12, 6, 5, 18, 11, 7, 10, 15, 4, 13, 15, 6, 14, 18, 17, 0, 15, 2, 12, 1, 14, 7, 7, 2, 6, 8, 7, 6, 8, 4, 5, 1, 8, 5, 1, 10, 5, 13, 2, 2, 3, 2, 8, 9, 1, 11, 14, 18, 10, 0, 0, 10, 10, 13, 12, 15, 2, 6, 18, 15, 12, 4, 17, 10, 3, 8, 2, 13, 3, 14, 16, 8, 3, 16, 11, 11, 14, 9, 8, 3, 10, 18, 17, 16, 3, 15, 16, 11, 1, 9, 18, 5, 4, 5, 11, 14, 3, 3, 17, 4, 10, 13, 17, 9, 5, 14, 15, 9, 5, 2, 3, 5, 17, 17, 18, 12, 11, 3, 8, 8, 12, 1, 4, 1, 15, 16, 8, 7, 16, 11, 10, 12, 14, 17, 2, 11, 15, 3, 4, 8, 18, 3, 3, 18, 3, 5, 6, 18, 13, 12, 4, 18, 4, 12, 6, 17, 16, 5, 18, 5, 6, 8, 11, 9, 0, 14, 13, 12, 10, 17, 18, 9, 15, 16, 9, 15, 0, 6, 0, 3, 7, 15, 5, 16, 14, 6, 6, 16, 6, 1, 16, 14, 3, 18, 9, 4, 4, 14, 2, 1, 0, 11, 7, 16, 2, 15, 17, 0, 10, 10, 10, 11, 4, 2, 1, 2, 10, 6, 2, 6, 13, 7, 15, 10, 3, 1, 13, 2, 6, 5, 12, 15, 15, 2, 17, 13, 6, 15, 9, 0, 14, 14, 12, 14, 5, 14, 1, 8, 11, 11, 14, 16, 11, 12, 7, 0, 6, 8, 11, 4, 14, 17, 6, 5, 6, 0, 5, 18, 12, 16, 5, 0, 4]
permutation_order: [ 0  4  1  3  2  8 10  5  6  9  7 11 15 13 16 12 14 17 18]
Best ll: -3123.2949828919204
Rounded LL: -5786.275938740569
Comparison: real_ll: -1855.1508969883714 - inferred_ll: -5786.275938740569
Hamming Distance: 82
weights:
[[0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [3, 0, 8, 7, 7, 4, 3, 17, 2, 18, 13, 1, 0, 2, 6, 7, 16, 0, 17, 6, 17, 13, 7, 14, 18, 8, 0, 5, 13, 10, 8, 4, 6, 10, 3, 2, 12, 3, 11, 11, 8, 1, 14, 17, 3, 12, 2, 17, 9, 11, 18, 6, 2, 1, 7, 9, 2, 7, 3, 12, 8, 14, 11, 5, 11, 11, 6, 8, 2, 5, 17, 7, 5, 14, 12, 8, 17, 7, 10, 1, 7, 1, 10, 12, 8, 2, 6, 18, 10, 6, 15, 12, 14, 4, 8, 4, 7, 17, 17, 8, 18, 13, 18, 12, 11, 7, 4, 16, 15, 2, 1, 3, 4, 5, 13, 2, 12, 12, 14, 16, 8, 17, 0, 3, 17, 8, 10, 3, 9, 13, 5, 14, 0, 8, 16, 5, 16, 3, 9, 16, 6, 4, 11, 5, 17, 16, 0, 10, 15, 0, 3, 11, 9, 7, 1, 7, 18, 2, 2, 15, 2, 17, 4, 4, 15, 17, 5, 8, 16, 13, 6, 17, 6, 9, 12, 11, 14, 16, 14, 3, 7, 7, 2, 10, 0, 18, 17, 7, 18, 7, 0, 2, 1, 7, 2, 1, 10, 2, 16, 7, 8, 15, 6, 17, 4, 18, 18, 15, 7, 15, 13, 6, 3, 3, 13, 11, 13, 13, 14, 1, 3, 1, 12, 10, 3, 7, 6, 6, 17, 14, 4, 13, 5, 8, 14, 7, 2, 14, 17, 3, 1, 17, 0, 2, 7, 5, 13, 15, 15, 6, 12, 1, 5, 12, 0, 12, 8, 14, 9, 13, 17, 15, 4, 6, 9, 6, 1, 18, 17, 1, 10, 1, 1, 18, 15, 16, 16, 5, 1, 16, 2, 5, 2, 2, 7, 12, 3, 18, 7, 18, 1, 2, 13, 18, 18, 16, 10, 8, 6, 10, 7, 8, 12, 4, 9, 14, 10, 2, 0, 14, 18, 3, 2, 17, 6, 16, 8, 4, 11, 2, 7, 11, 9, 5, 14, 17, 9, 16, 0, 17, 9, 3, 4, 8, 3, 3, 17, 4, 8, 9, 6, 10, 6, 8, 16, 15, 8, 1, 2, 13, 8, 1, 0, 10, 4, 8, 5, 14, 17, 13, 17, 0, 3, 2, 4, 17, 1, 11, 18, 17, 4, 13, 4, 1, 9, 11, 1, 11, 6, 7, 3, 11, 17, 13, 4, 7, 5, 5, 13, 0, 5, 10, 13, 7, 8, 5, 3, 12, 1, 15, 7, 6, 14, 11, 9, 7, 7, 0, 6, 12, 10, 8, 2, 8, 11, 16, 12, 17, 10, 0, 3, 8, 5, 18, 8, 1, 3, 13, 11, 10, 13, 16, 3, 12, 18, 6, 8, 1, 13, 0, 16, 17, 6, 11, 13, 2, 10, 10, 3, 9, 16, 9, 13, 10, 12, 9, 17, 4, 6, 13, 12, 5, 18, 9, 12, 17, 0, 9, 9, 6, 13, 18, 10, 14, 14, 14, 6, 16, 15, 5, 2, 9, 16, 10, 2, 7, 9, 7, 6, 4, 0, 1, 7, 15, 2, 14, 13, 18, 6, 12, 15, 12, 7, 4, 0, 3, 13, 7, 5, 16, 14, 1, 17, 7, 3, 14, 4, 14, 16, 17, 10, 14, 16, 13, 17, 14, 5, 15, 14, 8, 7, 8, 16, 15, 7, 8, 14, 2, 9, 7, 8, 10, 10, 17, 2, 4, 4, 7, 12, 4, 6, 2, 13, 13, 10, 17, 14, 13, 1, 6, 13, 12, 18, 0, 18, 12, 15, 0, 11, 9, 12, 13, 17, 17, 7, 15, 7, 8, 13, 15, 0, 12, 10, 12, 5, 14, 4, 17, 0, 12, 18, 18, 0, 2, 13, 4, 14, 5, 1, 8, 12, 10, 6, 14, 10, 10, 12, 8, 13, 8, 2, 15, 0, 17, 1, 11, 7, 2, 1, 0, 7, 6, 0, 4, 7, 4, 15, 3, 18, 6, 14, 8, 11, 5, 3, 5, 9, 3, 18, 0, 9, 18, 12, 12, 6, 2, 18, 7, 3, 9, 3, 18, 1, 11, 17, 13, 11, 2, 16, 10, 0, 13, 15, 3, 13, 11, 14, 4, 13, 5, 16, 8, 17, 15, 14, 13, 18, 8, 10, 7, 2, 8, 14, 7, 14, 18, 12, 10, 0, 15, 10, 5, 15, 6, 11, 8, 10, 8, 8, 17, 0, 16, 6, 2, 7, 13, 15, 17, 7, 15, 15, 14, 0, 2, 9, 7, 12, 7, 9, 18, 11, 15]
permutation_order: [ 0  4  1  3  2  8 10  5  6  7  9 11 13 15 17 14 12 16 18]
Best ll: -3163.6826442199294
Rounded LL: -7058.327202052393
Comparison: real_ll: -1830.9109327475012 - inferred_ll: -7058.327202052393
Hamming Distance: 82
weights:
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [12, 12, 6, 5, 7, 7, 4, 2, 8, 12, 16, 17, 2, 15, 6, 13, 18, 6, 11, 12, 6, 4, 14, 5, 18, 10, 2, 16, 2, 15, 10, 12, 1, 8, 17, 0, 13, 6, 11, 17, 2, 14, 16, 6, 14, 1, 11, 4, 6, 5, 14, 5, 16, 5, 1, 3, 0, 5, 15, 13, 2, 13, 2, 4, 9, 0, 12, 10, 4, 16, 12, 6, 1, 6, 14, 8, 17, 12, 4, 11, 15, 1, 4, 4, 13, 3, 3, 3, 4, 9, 5, 5, 13, 4, 6, 17, 10, 15, 7, 8, 3, 11, 5, 2, 16, 9, 0, 18, 1, 10, 6, 12, 12, 10, 12, 12, 13, 11, 17, 2, 5, 1, 11, 12, 14, 7, 9, 7, 9, 3, 10, 6, 7, 12, 9, 14, 2, 14, 13, 8, 2, 16, 9, 10, 15, 17, 4, 8, 13, 9, 13, 5, 9, 12, 14, 6, 12, 10, 6, 11, 0, 11, 9, 6, 5, 8, 13, 7, 13, 11, 12, 0, 3, 16, 17, 6, 0, 16, 9, 5, 16, 14, 6, 8, 13, 14, 17, 16, 9, 6, 0, 3, 9, 2, 18, 1, 1, 13, 9, 11, 17, 18, 18, 9, 6, 3, 12, 12, 5, 8, 14, 10, 4, 4, 14, 12, 13, 17, 5, 11, 8, 6, 8, 14, 18, 12, 5, 15, 18, 15, 5, 2, 17, 7, 14, 16, 0, 3, 10, 15, 2, 10, 0, 18, 17, 8, 0, 18, 10, 13, 8, 5, 4, 18, 1, 12, 1, 1, 10, 16, 7, 17, 9, 5, 14, 1, 13, 7, 6, 3, 15, 5, 8, 8, 11, 2, 17, 6, 17, 5, 11, 17, 2, 3, 4, 4, 4, 17, 2, 1, 16, 12, 5, 11, 7, 5, 10, 1, 10, 13, 6, 9, 5, 3, 4, 15, 16, 0, 7, 12, 3, 7, 18, 14, 2, 5, 5, 14, 11, 8, 10, 18, 1, 18, 12, 0, 9, 5, 4, 0, 9, 17, 9, 9, 3, 15, 13, 2, 1, 11, 5, 10, 10, 10, 1, 12, 8, 7, 17, 4, 0, 9, 12, 13, 16, 7, 5, 16, 13, 1, 6, 7, 8, 5, 18, 3, 13, 0, 18, 0, 6, 4, 5, 9, 1, 8, 5, 18, 13, 4, 0, 1, 16, 12, 14, 2, 5, 18, 7, 10, 13, 4, 15, 2, 11, 16, 5, 7, 18, 15, 6, 3, 13, 6, 5, 4, 15, 7, 5, 8, 5, 16, 16, 17, 2, 7, 7, 16, 7, 13, 12, 16, 17, 2, 7, 8, 10, 18, 10, 15, 6, 3, 0, 1, 13, 1, 10, 6, 1, 9, 5, 8, 8, 0, 18, 16, 9, 6, 11, 3, 5, 11, 12, 4, 9, 16, 8, 6, 14, 1, 0, 11, 7, 4, 2, 12, 0, 11, 10, 12, 7, 17, 4, 2, 0, 0, 5, 6, 7, 10, 8, 2, 0, 13, 3, 13, 2, 11, 15, 13, 17, 12, 17, 8, 10, 11, 3, 8, 16, 7, 2, 1, 7, 8, 10, 3, 8, 9, 7, 6, 14, 14, 16, 0, 8, 2, 12, 3, 0, 9, 15, 14, 13, 10, 16, 7, 17, 3, 9, 12, 6, 2, 18, 8, 14, 15, 10, 2, 0, 1, 18, 2, 4, 13, 6, 13, 18, 18, 0, 0, 3, 10, 6, 6, 3, 0, 13, 9, 5, 4, 9, 5, 13, 3, 9, 5, 13, 12, 3, 2, 8, 16, 9, 8, 5, 8, 3, 1, 2, 8, 15, 12, 4, 9, 15, 6, 16, 9, 14, 8, 16, 8, 5, 14, 9, 4, 6, 10, 16, 4, 16, 7, 11, 16, 2, 7, 17, 13, 4, 18, 0, 10, 12, 18, 2, 0, 13, 2, 13, 14, 3, 2, 0, 6, 2, 7, 9, 6, 3, 4, 8, 9, 5, 17, 6, 2, 3, 10, 0, 6, 9, 12, 10, 16, 1, 14, 8, 15, 17, 11, 6, 11, 4, 1, 10, 17, 7, 6, 16, 13, 15, 5, 11, 17, 5, 16, 17, 9, 0, 0, 18, 11, 4, 4, 13, 1, 2, 17, 10, 17, 9, 11, 5, 17, 10, 3, 17, 9, 1, 10, 13, 6, 5, 1, 5, 2, 15, 12, 13, 17, 17, 12, 11, 18, 12, 8, 3, 6, 11, 4, 2, 8, 3, 0, 11, 12, 10, 18, 7, 18, 3, 9]
permutation_order: [ 0  4  1  3  2  8  5 10  6  9  7 11 13 15 12 17 16 14 18]
Best ll: -3201.2200826500884
Rounded LL: -6822.925944167465
Comparison: real_ll: -1809.123758232041 - inferred_ll: -6822.925944167465
Hamming Distance: 84
weights:
[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
end_nodes: [4, 14, 14, 5, 12, 11, 13, 16, 3, 17, 3, 2, 14, 8, 1, 6, 10, 7, 9, 6, 5, 4, 6, 11, 11, 13, 6, 12, 14, 17, 8, 12, 5, 3, 5, 0, 12, 4, 18, 5, 6, 5, 0, 7, 14, 12, 4, 17, 1, 7, 16, 9, 18, 10, 16, 10, 17, 11, 15, 12, 1, 3, 9, 13, 8, 7, 13, 16, 15, 18, 8, 4, 1, 18, 10, 5, 1, 8, 3, 1, 7, 9, 16, 6, 18, 11, 10, 14, 0, 3, 15, 6, 16, 3, 6, 1, 12, 3, 12, 4, 15, 17, 1, 14, 5, 1, 15, 1, 6, 7, 5, 3, 1, 4, 6, 2, 3, 8, 2, 12, 1, 17, 13, 15, 14, 10, 14, 16, 6, 18, 8, 13, 4, 6, 13, 2, 8, 12, 8, 3, 6, 7, 1, 12, 8, 0, 8, 9, 1, 0, 17, 9, 7, 12, 0, 2, 7, 9, 0, 2, 18, 11, 10, 14, 1, 5, 2, 0, 11, 17, 4, 5, 0, 0, 10, 16, 12, 5, 12, 12, 14, 6, 6, 5, 18, 17, 8, 2, 14, 4, 13, 18, 18, 16, 3, 9, 4, 3, 18, 7, 1, 12, 14, 13, 11, 2, 2, 1, 14, 13, 0, 18, 4, 15, 3, 2, 9, 3, 17, 18, 4, 4, 17, 18, 4, 5, 11, 18, 12, 3, 15, 10, 3, 15, 9, 7, 11, 7, 1, 0, 7, 16, 3, 17, 2, 4, 15, 1, 15, 11, 16, 15, 6, 15, 1, 16, 18, 8, 0, 16, 16, 3, 5, 1, 18, 7, 14, 0, 3, 7, 11, 10, 3, 9, 3, 9, 9, 14, 6, 10, 2, 5, 10, 4, 6, 13, 2, 2, 10, 6, 10, 8, 4, 3, 14, 0, 6, 16, 5, 15, 1, 17, 14, 11, 0, 2, 15, 1, 13, 12, 4, 6, 13, 5, 6, 8, 8, 6, 9, 12, 12, 8, 10, 0, 8, 7, 16, 5, 1, 13, 2, 11, 3, 5, 15, 11, 6, 16, 7, 12, 0, 14, 10, 1, 8, 15, 1, 2, 11, 1, 8, 18, 14, 18, 9, 17, 12, 11, 10, 5, 4, 5, 10, 15, 12, 13, 7, 15, 3, 16, 6, 5, 2, 7, 2, 0, 8, 15, 7, 10, 13, 1, 8, 15, 11, 10, 2, 16, 9, 5, 11, 9, 7, 12, 13, 1, 0, 8, 2, 17, 3, 8, 13, 15, 17, 8, 17, 1, 15, 9, 5, 2, 2, 15, 6, 16, 2, 10, 4, 12, 16, 1, 12, 10, 13, 5, 18, 13, 7, 2, 14, 11, 0, 9, 13, 0, 14, 9, 6, 14, 15, 16, 4, 15, 4, 6, 9, 12, 0, 0, 12, 3, 18, 7, 4, 7, 15, 5, 13, 9, 9, 16, 12, 12, 12, 18, 15, 3, 17, 18, 4, 1, 16, 1, 0, 16, 13, 12, 12, 7, 0, 3, 2, 7, 12, 8, 9, 16, 5, 15, 17, 11, 11, 11, 13, 8, 2, 13, 7, 12, 0, 9, 17, 1, 11, 15, 13, 8, 14, 4, 15, 11, 9, 0, 2, 12, 3, 16, 12, 6, 5, 8, 1, 1, 2, 16, 14, 11, 0, 11, 18, 6, 10, 7, 18, 9, 16, 9, 10, 10, 10, 8, 3, 5, 9, 14, 16, 7, 7, 7, 10, 4, 12, 15, 14, 4, 12, 11, 5, 7, 7, 9, 9, 15, 9, 17, 18, 8, 18, 10, 0, 12, 12, 17, 13, 15, 9, 16, 13, 0, 16, 12, 4, 10, 8, 11, 11, 13, 3, 18, 5, 4, 3, 2, 14, 4, 6, 5, 1, 17, 17, 15, 14, 18, 9, 2, 12, 3, 10, 15, 14, 14, 18, 9, 17, 18, 1, 18, 4, 2, 0, 14, 18, 2, 10, 0, 18, 1, 17, 17, 3, 16, 3, 2, 11, 13, 17, 3, 9, 0, 10, 0, 14, 5, 1, 13, 1, 17, 17, 10, 8, 15, 2, 1, 14, 15, 8, 7, 12, 1, 17, 12, 18, 0, 3, 8, 5, 12, 0, 5, 13, 5, 18, 6, 9, 7, 2, 4, 16, 1, 17, 10, 3, 18, 18, 9, 6, 3, 12, 18, 10, 1, 11, 12, 1, 16, 10, 7, 10, 9, 17, 5, 2, 17, 14, 12, 3, 0, 1, 10, 16, 8, 17, 16, 16, 17, 5, 14, 1, 5, 3, 18]
permutation_order: [ 0  4  1  3  2  8  5 10  6  9  7 11 15 13 12 16 17 14 18]
Traceback (most recent call last):
  File "/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/experiments.py", line 209, in <module>
    conduct_one_big_run([0,1,2,3,42,99,100,132,420,999], [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])
  File "/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/experiments.py", line 194, in conduct_one_big_run
    weights, ll = method.optimize()
  File "/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py", line 143, in optimize
    ll, weights = self.opt_b(weights, bounds)
  File "/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py", line 119, in opt_b
    new_parent_weights[i][k] = self.calculate_local_optimum_b_inv(i, k, order_weights, bounds, expit_weights, new_parent_weights)
  File "/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py", line 102, in calculate_local_optimum_b_inv
    res = minimize(self.local_ll_sum_b_inv, x0=weights[i][k], bounds=bounds, options={'eps': 1e-3}, args=(weights, i, k, local_vec, c_vec), method='L-BFGS-B', tol=0.1)
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_minimize.py", line 713, in minimize
    res = _minimize_lbfgsb(fun, x0, args, jac, bounds,
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_lbfgsb_py.py", line 309, in _minimize_lbfgsb
    sf = _prepare_scalar_function(fun, x0, jac=jac, args=args, epsilon=eps,
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_optimize.py", line 402, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_differentiable_functions.py", line 185, in __init__
    self._update_grad()
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_differentiable_functions.py", line 267, in _update_grad
    self._update_grad_impl()
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_differentiable_functions.py", line 181, in update_grad
    self.g = approx_derivative(fun_wrapped, self.x, f0=self.f,
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_numdiff.py", line 519, in approx_derivative
    return _dense_difference(fun_wrapped, x0, f0, h,
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_numdiff.py", line 590, in _dense_difference
    df = fun(x) - f0
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_numdiff.py", line 470, in fun_wrapped
    f = np.atleast_1d(fun(x, *args, **kwargs))
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/optimize/_differentiable_functions.py", line 145, in fun_wrapped
    fx = fun(np.copy(x), *args)
  File "/Users/simonmenzi/Developer/Private/NEM-MCMC-optimization/methods.py", line 77, in local_ll_sum_b_inv
    B = solve_triangular(self.eye - weights, self.eye, lower=True)
  File "/Users/simonmenzi/Library/Python/3.9/lib/python/site-packages/scipy/linalg/_basic.py", line 351, in solve_triangular
    x, info = trtrs(a1.T, b1, overwrite_b=overwrite_b, lower=not lower,
KeyboardInterrupt